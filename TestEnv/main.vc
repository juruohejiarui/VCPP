using Console;
using Container;
using Math;

var ACNode[] nd;
var int ndcnt;
var double[] a;

func int getid(char ch) { return (ch - 'a') => int; }
class ACNode {
	public var int[] ch;
	public var int fil, fl;
	func __init__() { ch = $int[26]; }
}

func void insert(String str) {
	var int cur = 0;
	for (var int i = 0; i < str.Length(); i++) {
		var int ch = getid(str.Get(i));
		if (nd[cur].ch[ch] == 0) nd[cur].ch[ch] = ++ndcnt;
		cur = nd[cur].ch[ch];
	}
	nd[cur].fl++;
}

var int[] q;
var int ql, qr;

func void build() {
	ql = 1, qr = 0;
	for (var int i = 0; i < 26; i++) if (nd[0].ch[i])
		qr = qr + 1, q[qr] = nd[0].ch[i];
	while (ql <= qr) {
		var int u = q[ql]; ql = ql + 1;
		for (var int i = 0; i < 26; i++)
			if (nd[u].ch[i]) {
				qr = qr + 1, q[qr] = nd[u].ch[i];
				nd[nd[u].ch[i]].fil = nd[nd[u].fil].ch[i];
			} else nd[u].ch[i] = nd[nd[u].fil].ch[i];
	}
}

func int calc(String str) {
	var int ans = 0;
	for (var int i = 0, u = 0; i < str.Length(); i++) {
		u = nd[u].ch[getid(str.Get(i))];
		for (var int j = u; j && nd[j].fl != 0 - 1; j = nd[j].fil)
		 	ans = ans + nd[j].fl, nd[j].fl = 0 - 1;
	}
	return ans;
}

func void AC() {
	nd = $ACNode[1000005];
	q = $int[1000005];
	for (var int i = 0; i <= 1000000; i++) nd[i] = $ACNode();
	var int n = InputInt();
	ndcnt = 0;
	for (var int i = 1; i <= n; i++) {
		var String str = $String();
		str.Input();
		insert(str);
	}
	build();
	var String str = $String();
	str.Input();
	Print(calc(str)), PutChar('\n');
}

class Man :: Test::Person {
	protected var int Salary;
	func __init__() { super(); }
	func __init__(int Age) { SetAge(Age); }
	func void SetAge(int Age) {
		this.Age = Age;
		if (Age >= 18) Salary = 100 * (Age - 17);
		else Salary = 0;
	}
	func int GetSalary() { return Salary; }
}

func void Class() {
	var Test::Girl girl = $Test::Girl(24);
	Print(girl.GetAge()), PutChar(' '), Print((girl => Test::Person).GetAge()), PutChar('\n');
	var Test::Student student = $Test::Student();
	student.SetAge(24);
	Print(student.GetRegion()), PutChar(' '), Print(student.GetAge()), PutChar('\n');
	var Man man = $Man(12);  
	Print(man.GetSalary()), PutChar(' '), man.SetAge(24), Print(man.GetSalary());
}

func void Float() {
	Print("Now input the length of the sequence: ");
	var int n = InputInt();
	a = $double[n + 1];
	var double mxa;
	for (var int i = 1; i <= n; i++) {
		a[i] = InputDouble();
		if (i == 1) mxa = a[i];
		else mxa = max(mxa, a[i]);
	}
	Print(mxa);
}

func int Main() {
	Print("Test Module\n 1. AC-Machine 2. Class 3.float-max : ");
	var int T = InputInt();
	Print(T); PutChar('\n');
	if (T == 1) AC();
	else if (T == 2) Class();
	else Float();
	return 0;
}